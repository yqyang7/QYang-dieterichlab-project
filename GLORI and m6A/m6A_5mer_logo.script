>>> import pandas as pd
>>> import logomaker
>>> import matplotlib.pyplot as plt
>>> df = pd.read_csv("/prj/Qingyang/m6A_cov10_with5mer.csv", sep='\t',low_memory=False)
>>> print(df.head(10))
  chrom  chromStart  chromEnd name  score strand  thickStart  thickEnd  itemRgb  coverage  frequency 5mer_context
0     1       14378     14379    a     10      -       14378     14379  255,0,0        10       0.00        GGATC
1     1       14381     14382    a     17      -       14381     14382  255,0,0        17       0.00        AAAGG
2     1       14382     14383    a     14      -       14382     14383  255,0,0        14       0.00        TAAAG
3     1       14383     14384    a     12      -       14383     14384  255,0,0        12       0.00        ATAAA
4     1       14385     14386    a     11      -       14385     14386  255,0,0        11       0.00        TAATA
5     1       14397     14398    a     12      -       14397     14398  255,0,0        12      25.00        ACAGT
6     1       14399     14400    a     23      -       14399     14400  255,0,0        23       0.00        CAACA
7     1       14400     14401    a     21      -       14400     14401  255,0,0        21       4.76        CCAAC
8     1       14403     14404    a    142      -       14403     14404  255,0,0       142       1.41        AAACC
9     1       14404     14405    a     98      -       14404     14405  255,0,0        98       2.04        GAAAC
>>> sequences = df["5mer_context"]
>>> info_matrix = logomaker.alignment_to_matrix(sequences, to_type="information")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/beegfs/homes/qyang/myenv/lib/python3.11/site-packages/logomaker/src/error_handling.py", line 136, in wrapped_func
    raise e
  File "/beegfs/homes/qyang/myenv/lib/python3.11/site-packages/logomaker/src/error_handling.py", line 106, in wrapped_func
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/beegfs/homes/qyang/myenv/lib/python3.11/site-packages/logomaker/src/matrix.py", line 524, in alignment_to_matrix
    check(all(isinstance(seq, str) for seq in sequences),
  File "/beegfs/homes/qyang/myenv/lib/python3.11/site-packages/logomaker/src/error_handling.py", line 60, in check
    raise Error
logomaker.src.error_handling.LogomakerError: sequences must all be of type string
>>> df = df.dropna(subset=["5mer_context"])
>>> print(df["5mer_context"].value_counts())
5mer_context
AAAAA    195330
AAAAT    124507
AGAAA    120650
GAAAA    106472
AGAAG    105475
          ...  
NCACA         1
CCGCN         1
CTACN         1
ACNTT         1
NTTCA         1
Name: count, Length: 1033, dtype: int64
>>> print(df["5mer_context"].unique())
['GGATC' 'AAAGG' 'TAAAG' ... 'CTACN' 'ACNTT' 'NTTCA']
>>> print(df["5mer_context"].apply(len).value_counts())
5mer_context
5    11829962
3           2
Name: count, dtype: int64
>>> df["5mer_context"] = df["5mer_context"].astype(str).str.strip()
>>> df = df[df["5mer_context"].apply(len) == 5]
>>> sequences = df["5mer_context"].tolist()
>>> info_matrix = logomaker.alignment_to_matrix(sequences, to_type="information")
>>> plt.figure(figsize=(10, 4))
<Figure size 1000x400 with 0 Axes>
>>> logo = logomaker.Logo(info_matrix, center_values=True, width=0.8)
>>> logo.ax.set_ylabel("Information Content (bits)")
Text(0, 0.5, 'Information Content (bits)')
>>> logo.ax.set_ylabel("Shannon Entropy(bits)")
Text(0, 0.5, 'Shannon Entropy(bits)')
>>> logo.ax.set_xlabel("Position in 5mer")
Text(0.5, 0, 'Position in 5mer')
>>> logo.ax.set_title("logomaker m6A 5mer", fontsize=10, fontweight='bold')
Text(0.5, 1.0, 'logomaker m6A 5mer')
>>> logo.ax.set_xticks(range(len(info_matrix)))
[<matplotlib.axis.XTick object at 0x7f74dbd93990>, <matplotlib.axis.XTick object at 0x7f74dbe02750>, <matplotlib.axis.XTick object at 0x7f74dbdd6e90>, <matplotlib.axis.XTick object at 0x7f74dbe2dc10>, <matplotlib.axis.XTick object at 0x7f74dbe34310>]
>>> logo.ax.set_xticklabels(range(1, len(info_matrix) + 1))
[Text(0, 0, '1'), Text(1, 0, '2'), Text(2, 0, '3'), Text(3, 0, '4'), Text(4, 0, '5')]
>>> logo.ax.set_ylim([-2, 2])
(-2.0, 2.0)
>>> logo.style_spines(visible=False)
>>> logo.style_xticks(rotation=0, fmt="%d", anchor=0)
>>> logo.style_glyphs(fade_below=0.2)
>>> plt.savefig("m6A_5mer_logo.png", dpi=300, bbox_inches="tight")
>>> exit()
